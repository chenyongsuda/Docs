题目描述：
给出一个整数序列S，其中有N个数，定义其中一个非空连续子序列T中所有数的和为T的“序列和”。
对于S的所有非空连续子序列T，求最大的序列和。
变量条件：N为正整数，N≤1000000，结果序列和在范围（-2^63,2^63-1）以内。
 
输入：
第一行为一个正整数N，第二行为N个整数，表示序列中的数。
输出：
输入可能包括多组数据，对于每一组输入数据，
仅输出一个数，表示最大序列和。
样例输入：
5
1 5 -3 2 4

6
1 -2 3 4 -10 6

4
-3 -1 -2 -5
样例输出：
9
7
-1


较常见的一题

代码如下
#include <stdio.h>  
#include <string.h>
#include <algorithm>
#include <cmath>
#include <iostream>  

long long a[1000001];

int main(){  
	int n;  
	//ifstream cin("THU_1209.txt");  
	while( scanf("%d",&n) != EOF ){  
		long long max = 0;
		long long tillEnd = 0;

		for(int i=0;i<n;i++)  
		{  
			scanf("%lld",&a[i]);  
		}  
		
		tillEnd = a[0];
		max = a[0];
		for(int i=1;i<n;i++)  
		{  
			if(tillEnd < 0){
				tillEnd = a[i];
			}
			else{
				tillEnd += a[i];
			}
			max = (tillEnd > max ? tillEnd : max);
		}
		printf("%lld\n",max);
	}  
	return 0;
} 