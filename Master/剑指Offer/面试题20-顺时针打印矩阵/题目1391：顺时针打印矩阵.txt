题目1391：顺时针打印矩阵

题目描述：
输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，例如，如果输入如下矩阵：
1 2 3 4
5 6 7 8
9 10 11 12
13 14 15 16
则依次打印出数字1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.
输入：
输入可能包含多个测试样例，对于每个测试案例，
输入的第一行包括两个整数m和n(1<=m,n<=1000)：表示矩阵的维数为m行n列。
接下来的m行，每行包括n个整数，表示矩阵的元素，其中每个元素a的取值范围为(1<=a<=10000)。
输出：
对应每个测试案例，输出一行，
按照从外向里以顺时针的顺序依次打印出每一个数字，每个数字后面都有一个空格。
样例输入：
4 4
1 2 3 4
5 6 7 8
9 10 11 12
13 14 15 16
样例输出：
1 2 3 4 8 12 16 15 14 13 9 5 6 7 11 10 



之前做leetcode时候也碰到过   没做出来 越做越混乱
原因是建模过程不对
参考http://zhedahht.blog.163.com/blog/static/254111742010111112236313/
其实是个递归的过程 建模型正确了其实比较简单

我自己的代码
#include<stdio.h>
#include<string.h>

#define MAX 1001
int arr[MAX][MAX];

bool first =true;
void Print(int x, int y){
	if(first){
		printf("%d ",arr[x][y]);
		first = false;
	}else{
		printf("%d ",arr[x][y]);
	}
}
int main()
{
	int m,n;
	int nRow = 0, nCol = 0;
	int wid = 0,hig = 0;

	while(scanf("%d%d",&m,&n) != EOF) {
		first = true;
		//Get Min 
		int min = m > n ? n : m;
		wid = n; hig = m;
		nRow = 0; nCol = 0;
		//Get Array[]
		for(int i = 0; i < m; i++){
			for (int j = 0; j < n; j++) {
				scanf("%d",&arr[i][j]);
			}
		}
		
		//if 3 loop 2 times 5 ->3times
		for (int i = 0; i < (min + 1)/2; i++) {
			if(wid >= 2 & hig >= 2){
				//top
				for (int x = nCol; x < nCol + wid - 1; x++) {
					Print(nRow,x);
				}
				//right
				for (int x = nRow; x < nRow + hig -1; x++) {
					Print(x,nCol + wid - 1);
				}
				//bontom
				for(int x = nCol + wid -1; x >= nCol + 1; x --){
					Print(nRow + hig - 1,x);
				}
				//left
				for (int x = nRow + hig - 1; x >= nRow + 1; x--) {
					Print(x,nCol);
				}
			} else {
				if (1 == hig) {
					for(int i = nCol; i <nCol + wid; i++){
						Print(nRow,i);
					}
				} 
				else if (1 == wid){
					for (int i = nRow; i < nRow + hig; i++) {
						Print(i,nCol);
					}
				} else {

				}
			}
			nRow++;nCol++;
			hig -= 2;
			wid -= 2;
		}
		printf("\n");
	}
	return 0;
}

