题目1518：反转链表

题目描述：
输入一个链表，反转链表后，输出链表的所有元素。
(hint : 请务必使用链表)
输入：
输入可能包含多个测试样例，输入以EOF结束。
对于每个测试案例，输入的第一行为一个整数n(0<=n<=1000)：代表将要输入的链表的个数。
输入的第二行包含n个整数t(0<=t<=1000000)：代表链表元素。
输出：
对应每个测试案例，
以此输出链表反转后的元素，如没有元素则输出NULL。
样例输入：
5
1 2 3 4 5
0
样例输出：
5 4 3 2 1
NULL


和上一题差不多
ac代码如下：

// 倒序打印
#include<stdio.h>
#include<string.h>

typedef struct  Node{
	Node* next;
	int val;
}Node;

Node* head = NULL;
Node* cur = NULL;

void Reverse(Node* fir,bool& tag){
	if(NULL == fir){
		return;
	}
	Reverse(fir->next,tag);
	if(!tag){
		printf("%d",fir->val);
		tag = true;
	} 
	else {
		printf(" %d",fir->val);
	}
}

int main()
{
	int n;
	while(scanf("%d",&n) != EOF) {
		head = NULL;
		cur = NULL;

		for (int i = 0; i < n; i ++) {
			int tmp = 0;
			scanf("%d",&tmp);
			//Build Link List
			Node* node = new Node;
			node->next = NULL;
			node->val = tmp;
			if(NULL == head){
				head = cur =  node;
			} else{
				cur->next = node;
				cur = node;
			}
		}
		if(n <= 0){
			printf("NULL\n");
		}
		else{
			bool tag = false;
			Reverse(head,tag);
			printf("\n");
		}
	}
	return 0;
}


//真正反转链表
