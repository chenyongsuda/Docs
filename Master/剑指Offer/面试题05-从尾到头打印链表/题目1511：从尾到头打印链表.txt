题目1511：从尾到头打印链表

题目描述：
输入一个链表，从尾到头打印链表每个节点的值。
输入：
每个输入文件仅包含一组测试样例。
每一组测试案例包含多行，每行一个大于0的整数，代表一个链表的节点。第一行是链表第一个节点的值，依次类推。当输入到-1时代表链表输入完毕。-1本身不属于链表。
输出：
对应每个测试案例，以从尾到头的顺序输出链表每个节点的值，每个值占一行。
样例输入：
1
2
3
4
5
-1
样例输出：
5
4
3
2
1


1. 想到是栈递归调用 用递归  但是如果长度太长的话容易堆栈溢出 也可以用栈数据结构

递归代码
代码如下
#include<stdio.h>
#include<string.h>

typedef struct Node{
	Node* next;
	int val;
}Node;

Node* header = NULL;
Node* cur = NULL;

void ReverseLinklist(Node* cur){
	if (NULL == cur)
		return;
	ReverseLinklist(cur->next);
	printf("%d\n",cur->val);
}

int main()
{
	int n;
	//Build Linked list
	while(scanf("%d",&n) != EOF && -1 != n) {
		Node * node = new Node;
		node->next = NULL;
		node->val = n;
		if(NULL == header){
			header = cur =  node;
		}
		else{
			cur->next = node;
			cur = node;
		}
	}
	
	//reverse Link List
	ReverseLinklist(header);
	return 0;
}

