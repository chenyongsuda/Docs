题目1109：连通图

题目描述：
    给定一个无向图和其中的所有边，判断这个图是否所有顶点都是连通的。
输入：
    每组数据的第一行是两个整数 n 和 m（0<=n<=1000）。n 表示图的顶点数目，m 表示图中边的数目。如果 n 为 0 表示输入结束。随后有 m 行数据，每行有两个值 x 和 y（0<x, y <=n），表示顶点 x 和 y 相连，顶点的编号从 1 开始计算。输入不保证这些边是否重复。
输出：
    对于每组输入数据，如果所有顶点都是连通的，输出"YES"，否则输出"NO"。
样例输入：
4 3
1 2
2 3
3 2
3 2
1 2
2 3
0 0
样例输出：
NO
YES

并查集  暂时没用优化

#include<stdio.h>
#include<string.h>
#define MAX 1001

typedef struct Node{
	Node* parent;
	int num;
	int iValue;
} Node ;

Node* list[MAX];

Node* findParent(Node* node){
	Node* pCur = node;
	while (NULL != pCur->parent && NULL != pCur) {
		pCur = pCur->parent;
	}
	return pCur;
}

void Merge(int i , int j ){
	Node* itemA = findParent(list[i]);
	Node* itemB = findParent(list[j]);
	if(itemA == itemB){
		return;
	}
	if(NULL == itemA || NULL == itemB){
		return;
	}
	
	if(itemA->num >= itemB->num){
		itemB->parent = itemA;
		itemA->num += itemB->num;
	}
	else {
		itemA->parent = itemB;
		itemB->num += itemA->num; 
	}
}

int main()
{
	int n,m;
	while(scanf("%d%d",&n,&m) != EOF && 0 != n) {
		memset(list,0,sizeof(list));
		int a,b;

		for (int i = 1; i<= n; i++) {
			Node* item = new Node;
			item->iValue = i;
			item->parent = NULL;
			item->num = 1;
			list[i] = item;
		}


		for (int i = 0; i < m; i++) {
			scanf("%d%d",&a,&b);
			//Merge
			Merge(a,b);
		}
		
		//print End
		Node*  fir = findParent(list[1]);
		if(n == fir->num){
			printf("YES\n");
		}
		else{
			printf("NO\n");
		}
	}
	return 0;
}