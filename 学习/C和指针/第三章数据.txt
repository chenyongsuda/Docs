1.声明表达式也可用于声明指针,先给出一个基本类型,紧跟着是一个标示符列表,这些标示符组成表达式
int *a
语句表达式*a产生结果类型为int
所以a是指向int的指针

warning
写法 int *a  如果定义为 int *a,b,c 容易误解


2.声明指针变量 也可以指定初值
char *message = “Hello”
这条语句是把message声明为一个指向字符的指针,并用常量中第一个字符的地址为该指针初始化
这种声明容易你误解为初始值是赋值给*message的
更好的写法 
char *message
message = “Hello”


3.typedef和define的区别
#define是预处理指令，在编译预处理时进行简单的替换，不作正确性检查，不关含义是否正确照样带入，只有在编译已被展开的源程序时才会发现可能的错误并报错。
typedef是在编译时处理的。为各种数据类型定义一个新名字。

//注意格式 
typedef char *ptr_to_char;   //带分号
#define dptr_to_char  //不带分号

ptr_to_char a,b; //声明两个指向char型变量的指针
dptr_to_char a ,b; //声明一个指向char型变量的指针和一个char型变量


4.
  标识符链接属性linkage决定如何处理在不同文件中出现的标识符。标识符的作用域与它的链接属性有关，但这两个属性并不相同。
  链接属性一共有3种――external（外部）、internal（内部）和none（无）。none总是被当作单独的个体，也就是说该标识符的多个声明被当作不同的实体。internal在同一个源文件内的所有声明都指向同一个实体，不同源文件则不同实体。属于external的标识符不论声明多少次、位于几个源文件都表示同一实体。
  关键字extern和static用于在声明中修改标识符的链接属性。如果某个声明在正常情况下具有external链接属性，在它的前面加上static关键字可以使它的链接属性变为internal。
  staic只对缺省链接属性为external的声明才有改变链接属性的效果。当它用于代码块内部的变量声明时，static关键字用于修改变量的存储类型，从自动变量修改为静态变量，当变量的链接属性和作用域不受影响。
  extern关键字一般为一个标识符指定external链接属性，但是仅在源文件中的标识符第一次声明时有效，后面第二次或以后的声明即使加上extern也不能改变它已有的链接属性。



