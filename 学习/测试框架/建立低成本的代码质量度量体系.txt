建立低成本的代码质量度量体系
参考
http://www.51testing.com/?uid-13997-action-spacelist-type-blog-itemtypeid-5002


拟把静态分析数据、可测性度量数据、依赖关系、代码复杂度等维度捏合成一个指标，冒烟测试前扫描完成。以后每次产品测试准入时不断提高指标值。
 
同时把项目完成后把每千行代码发现的缺陷个数及严重等级、生产环境上发现的故障分,甚至单元测试代码覆盖率、项目持续集成成功率等数据捏合成一个指标。
 
针对测试准入时度量系数，java工程已有部份开源工具：
1)静态分析：findbugs
2)可测性度量：testability explorer
3)依赖关系：jdepend
4)代码复杂度:javancss
5)代码行统计:sloccount
6)代码覆盖率：emma/cobertura
 
linux c++工程相应开源工具：
1)静态分析:cppcheck
2)代码复杂度:cccc
3)代码行统计:sloccount
4)代码覆盖率：gcov/lcov
 
 
但上述工具输出并不一致，为了获得一个更有价值的指标，需要对工具做二次开发。
 
对于项目测试完成后的几个指标，每千行代码发现缺陷、生产环境故障分可手工录入，单元测试代码覆盖率及持续集成数据可考虑用自动化方式录入。
 
以上2个指标整合入现有web平台形成portal以观察代码质量指标变化趋势。

