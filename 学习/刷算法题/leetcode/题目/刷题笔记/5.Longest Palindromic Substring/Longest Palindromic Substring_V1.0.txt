#define MIN(a,b) ((a) > (b)) ? (b) : (a)

class Solution {
public:
    char speChar = '#';
string longestPalindrome(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        //O(n2)
    	int orilen = s.size();
		//Add '#'
		string a("",2 * orilen + 1);
		bool tag = true;
		for(int i = 0; i < 2 * orilen + 1; i ++){
			if(tag){
				a[i] = speChar;
				tag =  false;
			}
			else{
				a[i] = s[(i - 1) >> 1];
				tag =  true;
			}
		}
        int max = 1;
        int len = a.size();
        int sindex = 0;
        for(int i = 0; i < len; i++){
            int minlen = MIN(i,len-1-i);
            int count = 1;
            for(int j = 1; j <=minlen ; j++){
                    if(a[i + j] == a[i - j]){
                        count++;
                    }
                    else{
                        break;
                    }
            }
            if(max < count){
                max = count;
                sindex = i - count + 1;
            }
        }
        
        string restemp(a,sindex,2*max - 1);

		//Remove '#'
		string res("",(restemp.size()-1) >> 1);
		for(int i = 0; i < restemp.size(); i++){
			if(restemp[i] != speChar){
				res[(i - 1) >> 1] = restemp[i];	
			}
		}
		
        return res;
};
};